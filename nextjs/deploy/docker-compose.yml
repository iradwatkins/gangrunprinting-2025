version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: gangrun_postgres
    restart: unless-stopped
    environment:
      POSTGRES_USER: gangrun
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: gangrunprinting
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    networks:
      - gangrun_network

  nextjs:
    build:
      context: ..
      dockerfile: deploy/Dockerfile
    container_name: gangrun_nextjs
    restart: unless-stopped
    environment:
      DATABASE_URL: postgresql://gangrun:${DB_PASSWORD}@postgres:5432/gangrunprinting
      NEXTAUTH_URL: https://gangrunprinting.com
      NEXTAUTH_SECRET: ${NEXTAUTH_SECRET}
      NODE_ENV: production
      STORAGE_TYPE: local
      STORAGE_PATH: /app/uploads
    volumes:
      - uploads_data:/app/uploads
      - ./ssl:/app/ssl:ro
    ports:
      - "3100:3000"
    depends_on:
      - postgres
    networks:
      - gangrun_network
    command: >
      sh -c "
        npx prisma migrate deploy &&
        npx prisma generate &&
        node server.js
      "

volumes:
  postgres_data:
  uploads_data:

networks:
  gangrun_network:
    driver: bridge